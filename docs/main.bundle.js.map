{"version":3,"sources":["D:/workspace.web/angular-forms/src/$_lazy_route_resource lazy","D:/workspace.web/angular-forms/src/app/account/account.model.ts","D:/workspace.web/angular-forms/src/app/account/account.service.ts","D:/workspace.web/angular-forms/src/app/account/confirm/confirm.component.css","D:/workspace.web/angular-forms/src/app/account/confirm/confirm.component.html","D:/workspace.web/angular-forms/src/app/account/confirm/confirm.component.ts","D:/workspace.web/angular-forms/src/app/account/login/login.component.css","D:/workspace.web/angular-forms/src/app/account/login/login.component.html","D:/workspace.web/angular-forms/src/app/account/login/login.component.ts","D:/workspace.web/angular-forms/src/app/account/signup/signup.component.css","D:/workspace.web/angular-forms/src/app/account/signup/signup.component.html","D:/workspace.web/angular-forms/src/app/account/signup/signup.component.ts","D:/workspace.web/angular-forms/src/app/app-routing.module.ts","D:/workspace.web/angular-forms/src/app/app.component.css","D:/workspace.web/angular-forms/src/app/app.component.html","D:/workspace.web/angular-forms/src/app/app.component.ts","D:/workspace.web/angular-forms/src/app/app.module.ts","D:/workspace.web/angular-forms/src/environments/environment.ts","D:/workspace.web/angular-forms/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","export class Account {\r\n\r\n  // would never pass passwords around like this, but just for\r\n  // the sample project\r\n  constructor(public firstname: string,\r\n              public lastname: string,\r\n              public accountType: string,\r\n              public email: string,\r\n              public password: string,\r\n              public confirm: string) {\r\n  }\r\n\r\n  hiddenPassword() {\r\n    let hidden = '';\r\n    const length = this.password.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      hidden += '*';\r\n    }\r\n\r\n    return hidden;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/account/account.model.ts","import {Injectable} from '@angular/core';\r\nimport {Account} from './account.model';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n\r\n  account: Account;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  confirm(account: Account) {\r\n    console.log(JSON.stringify(account));\r\n    this.account = account;\r\n  }\r\n\r\n  getAccount() {\r\n    return this.account;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/account/account.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/account/confirm/confirm.component.css\n// module id = ../../../../../src/app/account/confirm/confirm.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"account != null\\\">\\n  <div class=\\\"confirm-container\\\">\\n\\n    <div class=\\\"page-header\\\">\\n      <h3>Confirm Account</h3>\\n    </div>\\n\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">First name: {{ account.firstname }}</li>\\n      <li class=\\\"list-group-item\\\">Last name: {{ account.lastname }}</li>\\n      <li class=\\\"list-group-item\\\">Account type: {{ account.accountType }}</li>\\n      <li class=\\\"list-group-item\\\">Email: {{ account.email }}</li>\\n      <li class=\\\"list-group-item\\\">Password: {{ account.hiddenPassword() }}</li>\\n    </ul>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/account/confirm/confirm.component.html\n// module id = ../../../../../src/app/account/confirm/confirm.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {AccountService} from '../account.service';\nimport {Account} from '../account.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.css']\n})\nexport class ConfirmComponent implements OnInit {\n\n  account: Account;\n\n  constructor(private accountService: AccountService,\n              private router: Router) { }\n\n  ngOnInit() {\n    // not exactly how account confirmation would play out in\n    // the real world\n    this.account = this.accountService.getAccount();\n\n    // navigate away\n    if(this.account == null) {\n      this.router.navigate(['signup']);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/account/confirm/confirm.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-container {\\r\\n  width: 250px;\\r\\n  margin:150px auto 0;\\r\\n}\\r\\n\\r\\n.form-action-buttons {\\r\\n  width:145px;\\r\\n  margin:0 auto;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/account/login/login.component.css\n// module id = ../../../../../src/app/account/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"login-container\\\">\\n    <form (ngSubmit)=\\\"onSubmit(loginForm)\\\" #loginForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Login</label>\\n        <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\"  id=\\\"username\\\" placeholder=\\\"Username or email\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n               placeholder=\\\"******************\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n\\n        <div class=\\\"form-action-buttons\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Log in</button>\\n          <button type=\\\"button\\\"\\n                  class=\\\"btn btn-primary\\\"\\n                  (click)=\\\"onSignUp()\\\">Sign up</button>\\n        </div>\\n\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/account/login/login.component.html\n// module id = ../../../../../src/app/account/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSignUp() {\n    this.router.navigate(['/signup']);\n  }\n\n  onSubmit(ngForm: NgForm) {\n    console.log('form submitted');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/account/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".signup-buttons {\\r\\n  width:140px;\\r\\n  margin-left:auto;\\r\\n  margin-right:auto;\\r\\n}\\r\\n\\r\\n.home-link {\\r\\n  display:block;\\r\\n  width:85px;\\r\\n  margin:0 auto;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/account/signup/signup.component.css\n// module id = ../../../../../src/app/account/signup/signup.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"signup-container\\\">\\n\\n    <form (ngSubmit)=\\\"onSubmit(signupForm)\\\" #signupForm=\\\"ngForm\\\">\\n      <!-- ngModel tells angular that a field is an active control of the form -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstname\\\">First name</label>\\n        <input type=\\\"text\\\"\\n               id=\\\"firstname\\\"\\n               name=\\\"firstname\\\"\\n               class=\\\"form-control\\\"\\n               required\\n               ngModel\\n               #firstname=\\\"ngModel\\\">\\n        <p class=\\\"invalid-field-message\\\" *ngIf=\\\"!firstname.valid && firstname.touched\\\">\\n          A first name <em>must</em> be supplied\\n        </p>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastname\\\">Last name</label>\\n        <input type=\\\"text\\\"\\n               id=\\\"lastname\\\"\\n               name=\\\"lastname\\\"\\n               class=\\\"form-control\\\"\\n               required\\n               ngModel\\n               #lastname=\\\"ngModel\\\">\\n        <p class=\\\"invalid-field-message\\\" *ngIf=\\\"!lastname.valid && lastname.touched\\\">\\n          A last name <em>must</em> be supplied\\n        </p>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"accountType\\\">Account type</label>\\n        <select id=\\\"accountType\\\"\\n                name=\\\"accountType\\\"\\n                [ngModel]=\\\"selectedAccountType\\\"\\n                class=\\\"form-control\\\">\\n          <option *ngFor=\\\"let type of accountTypes\\\"\\n            [value]=\\\"type\\\">{{type}}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\"\\n               id=\\\"email\\\"\\n               name=\\\"email\\\"\\n               class=\\\"form-control\\\"\\n               ngModel\\n               required\\n               email\\n               #email=\\\"ngModel\\\">\\n        <!-- email must be bound to ngModel in order to gain access in the control statement below -->\\n        <p class='invalid-field-message' *ngIf=\\\"!email.valid && email.touched\\\">Please enter a valid email address.</p>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\"\\n               id=\\\"password\\\"\\n               name=\\\"password\\\"\\n               class=\\\"form-control\\\"\\n               required\\n               ngModel\\n               #password=\\\"ngModel\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n        <input type=\\\"confirmPassword\\\"\\n               id=\\\"confirmPassword\\\"\\n               name=\\\"confirmPassword\\\"\\n               class=\\\"form-control\\\"\\n               required\\n               ngModel\\n               #confirmPassword=\\\"ngModel\\\">\\n        <p class=\\\"invalid-field-message\\\" *ngIf=\\\"!arePasswordsValid() && arePasswordsTouched()\\\">\\n          Password fields do not match.\\n        </p>\\n      </div>\\n\\n      <div class=\\\"form-group signup-buttons\\\">\\n        <button type=\\\"submit\\\"\\n                class='btn btn-primary'\\n                [disabled]=\\\"!isSubmitEnabled()\\\">Submit</button>\\n\\n        <button type=\\\"button\\\"\\n                class=\\\"btn btn-warning\\\"\\n                (click)=\\\"onReset()\\\">Reset</button>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <a [routerLink]=\\\"['/']\\\" class=\\\"home-link\\\">Return home</a>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/account/signup/signup.component.html\n// module id = ../../../../../src/app/account/signup/signup.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgForm, NgModel} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AccountService} from '../account.service';\nimport {Account} from '../account.model';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  accountTypes: string[] = ['Basic', 'Advanced', 'Pro'];\n  selectedAccountType: string;\n\n  @ViewChild('firstname') fieldname;\n  @ViewChild('password') password: NgModel;\n  @ViewChild('confirmPassword') confirmPassword: NgModel;\n  @ViewChild('signupForm') signupForm: NgForm;\n\n  constructor(private account: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    this.selectedAccountType = 'Pro';\n  }\n\n  onSubmit(signupForm: NgForm) {\n\n    if(signupForm.valid) {\n      this.account.confirm(new Account(\n        signupForm.value.firstname,\n        signupForm.value.lastname,\n        signupForm.value.accountType,\n        signupForm.value.email,\n        signupForm.value.password,\n        signupForm.value.confirmPassword,\n      ));\n\n      this.router.navigate(['confirm']);\n    }\n  }\n\n  onReset() {\n\n  }\n\n  isSubmitEnabled() {\n    const enabled: boolean = this.arePasswordsValid()\n              && this.arePasswordsTouched()\n              && this.signupForm.valid;\n\n    return enabled;\n  }\n  arePasswordsTouched() {\n    return (this.password.touched && this.confirmPassword.touched);\n  }\n\n  arePasswordsValid() {\n    const pw = this.password.value;\n    const cpw = this.confirmPassword.value;\n    return (pw === cpw && this.arePasswordsTouched());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/account/signup/signup.component.ts","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AppComponent} from './app.component';\r\nimport {SignupComponent} from './account/signup/signup.component';\r\nimport {LoginComponent} from './account/login/login.component';\r\nimport {ConfirmComponent} from './account/confirm/confirm.component';\r\n\r\nconst appRoutes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'confirm', component: ConfirmComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n    <router-outlet></router-outlet>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace.web/angular-forms/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSubmit(loginForm: NgForm) {\n    console.log('form submitted');\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {AppRoutingModule} from './app-routing.module';\nimport { SignupComponent } from './account/signup/signup.component';\nimport { LoginComponent } from './account/login/login.component';\nimport { ConfirmComponent } from './account/confirm/confirm.component';\nimport {AccountService} from './account/account.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    ConfirmComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [ AccountService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace.web/angular-forms/src/main.ts"],"sourceRoot":"webpack:///"}